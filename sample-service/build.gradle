plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.6.9'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

ext {
    set('springCloudVersion', '2021.0.1')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'com.azure.spring:azure-spring-boot-starter:4.0.0'
    implementation 'com.azure.spring:azure-spring-boot-starter-cosmos:4.0.0'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot:3.0.4'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.jayway.jsonpath:json-path:2.6.0'

    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation 'io.cucumber:cucumber-java:7.2.3'
    testImplementation 'io.cucumber:cucumber-junit:7.2.3'
    testImplementation 'io.cucumber:cucumber-spring:7.2.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
}

group = 'org.landg.lgrs.imagechannel'
version = '1.0.0-SNAPSHOT'
description = 'seq-image-channel-adapter'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--glue', 'com.volvo.gox.pop.price.creation.base',
                    'src/test/resources']
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
